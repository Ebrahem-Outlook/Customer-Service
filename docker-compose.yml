version: '3.4'

services:
  customer-service-api:
    image: ${DOCKER_REGISTRY-}customerserviceapi
    build:
      context: .
      dockerfile: Customer-Service.API/Dockerfile
    container_name: customer_service_api
    ports:
      - "5000:80"
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - rabbitmq
    environment:
      - DATABASE_URL=postgres://Ebrahem.Outlook:Ebrahem0123*#@postgres:5432/yourdatabase
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://Ebrahem.Outlook:Ebrahem0123*#@rabbitmq:5672/
      - SERILOG_ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - log-data:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: Ebrahem.Outlook
      POSTGRES_PASSWORD: Ebrahem0123*#
      POSTGRES_DB: yourdatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U Ebrahem.Outlook"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.3
    container_name: elasticsearch_node
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTICSEARCH_JAVA_OPTS="-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    environment:
      RABBITMQ_DEFAULT_USER: Ebrahem.Outlook
      RABBITMQ_DEFAULT_PASS: Ebrahem0123*#
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

volumes:
  postgres-data:
    name: postgres_data
  log-data:
    name: log_data
